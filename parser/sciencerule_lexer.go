// Code generated from ScienceRule.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 26, 207,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 13, 3, 13, 5, 13, 93, 10, 13, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 5,
	14, 100, 10, 14, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15, 3, 15,
	3, 15, 5, 15, 111, 10, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 17, 3,
	17, 7, 17, 120, 10, 17, 12, 17, 14, 17, 123, 11, 17, 3, 18, 3, 18, 3, 18,
	5, 18, 128, 10, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 21, 3, 21, 3, 21, 3,
	21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 22, 7, 22, 143, 10, 22, 12, 22, 14,
	22, 146, 11, 22, 3, 22, 3, 22, 3, 23, 3, 23, 3, 23, 5, 23, 153, 10, 23,
	3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 5, 26, 164,
	10, 26, 3, 26, 3, 26, 3, 26, 6, 26, 169, 10, 26, 13, 26, 14, 26, 170, 3,
	26, 5, 26, 174, 10, 26, 3, 27, 3, 27, 3, 27, 7, 27, 179, 10, 27, 12, 27,
	14, 27, 182, 11, 27, 5, 27, 184, 10, 27, 3, 28, 3, 28, 5, 28, 188, 10,
	28, 3, 28, 3, 28, 3, 29, 3, 29, 3, 30, 3, 30, 7, 30, 196, 10, 30, 12, 30,
	14, 30, 199, 11, 30, 3, 31, 3, 31, 7, 31, 203, 10, 31, 12, 31, 14, 31,
	206, 11, 31, 2, 2, 32, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	2, 37, 2, 39, 2, 41, 19, 43, 20, 45, 2, 47, 2, 49, 2, 51, 21, 53, 22, 55,
	23, 57, 24, 59, 25, 61, 26, 3, 2, 11, 5, 2, 47, 47, 60, 60, 97, 97, 4,
	2, 67, 92, 99, 124, 4, 2, 36, 36, 94, 94, 10, 2, 36, 36, 49, 49, 94, 94,
	100, 100, 104, 104, 112, 112, 116, 116, 118, 118, 5, 2, 50, 59, 67, 72,
	99, 104, 3, 2, 50, 59, 3, 2, 51, 59, 4, 2, 71, 71, 103, 103, 4, 2, 45,
	45, 47, 47, 2, 217, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2,
	2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2,
	2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3,
	2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31,
	3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2,
	51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2,
	2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 3, 63, 3, 2, 2, 2, 5, 65, 3, 2, 2,
	2, 7, 67, 3, 2, 2, 2, 9, 70, 3, 2, 2, 2, 11, 72, 3, 2, 2, 2, 13, 74, 3,
	2, 2, 2, 15, 76, 3, 2, 2, 2, 17, 78, 3, 2, 2, 2, 19, 80, 3, 2, 2, 2, 21,
	82, 3, 2, 2, 2, 23, 84, 3, 2, 2, 2, 25, 92, 3, 2, 2, 2, 27, 99, 3, 2, 2,
	2, 29, 110, 3, 2, 2, 2, 31, 112, 3, 2, 2, 2, 33, 117, 3, 2, 2, 2, 35, 127,
	3, 2, 2, 2, 37, 129, 3, 2, 2, 2, 39, 131, 3, 2, 2, 2, 41, 133, 3, 2, 2,
	2, 43, 139, 3, 2, 2, 2, 45, 149, 3, 2, 2, 2, 47, 154, 3, 2, 2, 2, 49, 160,
	3, 2, 2, 2, 51, 163, 3, 2, 2, 2, 53, 183, 3, 2, 2, 2, 55, 185, 3, 2, 2,
	2, 57, 191, 3, 2, 2, 2, 59, 193, 3, 2, 2, 2, 61, 200, 3, 2, 2, 2, 63, 64,
	7, 42, 2, 2, 64, 4, 3, 2, 2, 2, 65, 66, 7, 43, 2, 2, 66, 6, 3, 2, 2, 2,
	67, 68, 7, 114, 2, 2, 68, 69, 7, 116, 2, 2, 69, 8, 3, 2, 2, 2, 70, 71,
	7, 48, 2, 2, 71, 10, 3, 2, 2, 2, 72, 73, 7, 93, 2, 2, 73, 12, 3, 2, 2,
	2, 74, 75, 7, 95, 2, 2, 75, 14, 3, 2, 2, 2, 76, 77, 7, 45, 2, 2, 77, 16,
	3, 2, 2, 2, 78, 79, 7, 47, 2, 2, 79, 18, 3, 2, 2, 2, 80, 81, 7, 44, 2,
	2, 81, 20, 3, 2, 2, 2, 82, 83, 7, 49, 2, 2, 83, 22, 3, 2, 2, 2, 84, 85,
	7, 39, 2, 2, 85, 24, 3, 2, 2, 2, 86, 87, 7, 112, 2, 2, 87, 88, 7, 113,
	2, 2, 88, 93, 7, 118, 2, 2, 89, 90, 7, 80, 2, 2, 90, 91, 7, 81, 2, 2, 91,
	93, 7, 86, 2, 2, 92, 86, 3, 2, 2, 2, 92, 89, 3, 2, 2, 2, 93, 26, 3, 2,
	2, 2, 94, 95, 7, 99, 2, 2, 95, 96, 7, 112, 2, 2, 96, 100, 7, 102, 2, 2,
	97, 98, 7, 113, 2, 2, 98, 100, 7, 116, 2, 2, 99, 94, 3, 2, 2, 2, 99, 97,
	3, 2, 2, 2, 100, 28, 3, 2, 2, 2, 101, 102, 7, 118, 2, 2, 102, 103, 7, 116,
	2, 2, 103, 104, 7, 119, 2, 2, 104, 111, 7, 103, 2, 2, 105, 106, 7, 104,
	2, 2, 106, 107, 7, 99, 2, 2, 107, 108, 7, 110, 2, 2, 108, 109, 7, 117,
	2, 2, 109, 111, 7, 103, 2, 2, 110, 101, 3, 2, 2, 2, 110, 105, 3, 2, 2,
	2, 111, 30, 3, 2, 2, 2, 112, 113, 7, 112, 2, 2, 113, 114, 7, 119, 2, 2,
	114, 115, 7, 110, 2, 2, 115, 116, 7, 110, 2, 2, 116, 32, 3, 2, 2, 2, 117,
	121, 5, 39, 20, 2, 118, 120, 5, 35, 18, 2, 119, 118, 3, 2, 2, 2, 120, 123,
	3, 2, 2, 2, 121, 119, 3, 2, 2, 2, 121, 122, 3, 2, 2, 2, 122, 34, 3, 2,
	2, 2, 123, 121, 3, 2, 2, 2, 124, 128, 9, 2, 2, 2, 125, 128, 5, 37, 19,
	2, 126, 128, 5, 39, 20, 2, 127, 124, 3, 2, 2, 2, 127, 125, 3, 2, 2, 2,
	127, 126, 3, 2, 2, 2, 128, 36, 3, 2, 2, 2, 129, 130, 4, 50, 59, 2, 130,
	38, 3, 2, 2, 2, 131, 132, 9, 3, 2, 2, 132, 40, 3, 2, 2, 2, 133, 134, 5,
	53, 27, 2, 134, 135, 7, 48, 2, 2, 135, 136, 5, 53, 27, 2, 136, 137, 7,
	48, 2, 2, 137, 138, 5, 53, 27, 2, 138, 42, 3, 2, 2, 2, 139, 144, 7, 36,
	2, 2, 140, 143, 5, 45, 23, 2, 141, 143, 10, 4, 2, 2, 142, 140, 3, 2, 2,
	2, 142, 141, 3, 2, 2, 2, 143, 146, 3, 2, 2, 2, 144, 142, 3, 2, 2, 2, 144,
	145, 3, 2, 2, 2, 145, 147, 3, 2, 2, 2, 146, 144, 3, 2, 2, 2, 147, 148,
	7, 36, 2, 2, 148, 44, 3, 2, 2, 2, 149, 152, 7, 94, 2, 2, 150, 153, 9, 5,
	2, 2, 151, 153, 5, 47, 24, 2, 152, 150, 3, 2, 2, 2, 152, 151, 3, 2, 2,
	2, 153, 46, 3, 2, 2, 2, 154, 155, 7, 119, 2, 2, 155, 156, 5, 49, 25, 2,
	156, 157, 5, 49, 25, 2, 157, 158, 5, 49, 25, 2, 158, 159, 5, 49, 25, 2,
	159, 48, 3, 2, 2, 2, 160, 161, 9, 6, 2, 2, 161, 50, 3, 2, 2, 2, 162, 164,
	7, 47, 2, 2, 163, 162, 3, 2, 2, 2, 163, 164, 3, 2, 2, 2, 164, 165, 3, 2,
	2, 2, 165, 166, 5, 53, 27, 2, 166, 168, 7, 48, 2, 2, 167, 169, 9, 7, 2,
	2, 168, 167, 3, 2, 2, 2, 169, 170, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170,
	171, 3, 2, 2, 2, 171, 173, 3, 2, 2, 2, 172, 174, 5, 55, 28, 2, 173, 172,
	3, 2, 2, 2, 173, 174, 3, 2, 2, 2, 174, 52, 3, 2, 2, 2, 175, 184, 7, 50,
	2, 2, 176, 180, 9, 8, 2, 2, 177, 179, 9, 7, 2, 2, 178, 177, 3, 2, 2, 2,
	179, 182, 3, 2, 2, 2, 180, 178, 3, 2, 2, 2, 180, 181, 3, 2, 2, 2, 181,
	184, 3, 2, 2, 2, 182, 180, 3, 2, 2, 2, 183, 175, 3, 2, 2, 2, 183, 176,
	3, 2, 2, 2, 184, 54, 3, 2, 2, 2, 185, 187, 9, 9, 2, 2, 186, 188, 9, 10,
	2, 2, 187, 186, 3, 2, 2, 2, 187, 188, 3, 2, 2, 2, 188, 189, 3, 2, 2, 2,
	189, 190, 5, 53, 27, 2, 190, 56, 3, 2, 2, 2, 191, 192, 7, 12, 2, 2, 192,
	58, 3, 2, 2, 2, 193, 197, 7, 46, 2, 2, 194, 196, 7, 34, 2, 2, 195, 194,
	3, 2, 2, 2, 196, 199, 3, 2, 2, 2, 197, 195, 3, 2, 2, 2, 197, 198, 3, 2,
	2, 2, 198, 60, 3, 2, 2, 2, 199, 197, 3, 2, 2, 2, 200, 204, 7, 34, 2, 2,
	201, 203, 5, 57, 29, 2, 202, 201, 3, 2, 2, 2, 203, 206, 3, 2, 2, 2, 204,
	202, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 62, 3, 2, 2, 2, 206, 204, 3,
	2, 2, 2, 19, 2, 92, 99, 110, 121, 127, 142, 144, 152, 163, 170, 173, 180,
	183, 187, 197, 204, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'('", "')'", "'pr'", "'.'", "'['", "']'", "'+'", "'-'", "'*'", "'/'",
	"'%'", "", "", "", "'null'", "", "", "", "", "", "", "'\n'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "ADD", "SUB", "MUL", "DIV", "MOD", "NOT", "LOGICAL_OPERATOR",
	"BOOLEAN", "NULL", "ATTRNAME", "VERSION", "STRING", "DOUBLE", "INT", "EXP",
	"NEWLINE", "COMMA", "SP",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "ADD", "SUB", "MUL", "DIV",
	"MOD", "NOT", "LOGICAL_OPERATOR", "BOOLEAN", "NULL", "ATTRNAME", "ATTR_NAME_CHAR",
	"DIGIT", "ALPHA", "VERSION", "STRING", "ESC", "UNICODE", "HEX", "DOUBLE",
	"INT", "EXP", "NEWLINE", "COMMA", "SP",
}

type ScienceRuleLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewScienceRuleLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ScienceRuleLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewScienceRuleLexer(input antlr.CharStream) *ScienceRuleLexer {
	l := new(ScienceRuleLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ScienceRule.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ScienceRuleLexer tokens.
const (
	ScienceRuleLexerT__0             = 1
	ScienceRuleLexerT__1             = 2
	ScienceRuleLexerT__2             = 3
	ScienceRuleLexerT__3             = 4
	ScienceRuleLexerT__4             = 5
	ScienceRuleLexerT__5             = 6
	ScienceRuleLexerADD              = 7
	ScienceRuleLexerSUB              = 8
	ScienceRuleLexerMUL              = 9
	ScienceRuleLexerDIV              = 10
	ScienceRuleLexerMOD              = 11
	ScienceRuleLexerNOT              = 12
	ScienceRuleLexerLOGICAL_OPERATOR = 13
	ScienceRuleLexerBOOLEAN          = 14
	ScienceRuleLexerNULL             = 15
	ScienceRuleLexerATTRNAME         = 16
	ScienceRuleLexerVERSION          = 17
	ScienceRuleLexerSTRING           = 18
	ScienceRuleLexerDOUBLE           = 19
	ScienceRuleLexerINT              = 20
	ScienceRuleLexerEXP              = 21
	ScienceRuleLexerNEWLINE          = 22
	ScienceRuleLexerCOMMA            = 23
	ScienceRuleLexerSP               = 24
)
